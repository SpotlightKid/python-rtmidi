name: Build sdist and wheels and publish to TestPyPI

on:
  push:
    branches:
      - master

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install ninja
      run: pipx install ninja

    - name: Install alsa deps
      run: sudo apt-get install libasound2-dev

    - name: Build sdist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check --strict dist/*

    - name: Upload sdist
      uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:

    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: ilammy/msvc-dev-cmd@v1
      if: matrix.os == 'windows-latest'

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.13
      env:
        # Skip trying to test arm64 builds on Intel Macs
        CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  build_arch_wheels:
    name: Build wheels on Linux ${{ matrix.arch }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [aarch64]
    steps:

    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.13
      env:
        CIBW_ARCHS: ${{ matrix.arch }}

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  upload_pypi:
    needs: [build_arch_wheels, build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: PyPI release
    if: github.ref == 'refs/heads/develop'
    steps:

    - uses: actions/download-artifact@v3
      with:
        # unpacks default artifact into dist/
        # if `name: artifact` is omitted, the action will create extra parent dir
        name: artifact
        path: dist

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.8.6
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        verify-metadata: false
